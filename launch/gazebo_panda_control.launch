<?xml version="1.0" ?>

<launch>
    <arg name="robot_ip" default="172.16.0.2" />
    <arg name="arm_id" default="panda" />
    <arg name="load_gripper" default="true" />
    <arg name="rviz" default="false" />
    <arg name="gazebo" default="true" />
    <arg name="debug" default="false" />
    <arg name="world" default="worlds/empty.world" />
    <arg name="controller" default="position_joint_trajectory_controller" />
    <arg name="mode" default="ceil" />
    <arg name="use_gui" default="false" />
    <arg name="base_height" default="0.7" />
    <arg name="first_joint_length" default="0.333" />

    <arg name="initial_joint_positions"
    default="-J $(arg arm_id)_joint1 0
                -J $(arg arm_id)_joint2 -0.785398163397
                -J $(arg arm_id)_joint3 0
                -J $(arg arm_id)_joint4 -2.3561944899
                -J $(arg arm_id)_joint5 0
                -J $(arg arm_id)_joint6 1.57079632679
                -J $(arg arm_id)_joint7 0.785398163397
                -J $(arg arm_id)_finger_joint1 0.001
                -J $(arg arm_id)_finger_joint2 0.001"
    />

    <param name="m_ee" value="0.76" if="$(arg load_gripper)" />
    <param name="mode" value="$(arg mode)" />

    <rosparam file="$(find franka_gazebo)/config/franka_hw_sim.yaml" subst_value="true" />
    <rosparam file="$(find humanlike_moving_robot)/config/controllers.yaml" subst_value="true" />    

    <group if="$(eval mode == 'vert')">
        <param name="robot_description"
                command="xacro $(find franka_description)/robots/panda/panda.urdf.xacro
                        gazebo:=true
                        hand:=$(arg load_gripper)
                        arm_id:=$(arg arm_id)
                        xyz:='0 0 0'
                        rpy:='0 0 0'">
        </param>
    </group>

    <group if="$(eval mode == 'horz')">
        <param name="robot_description"
                command="xacro $(find franka_description)/robots/panda/panda.urdf.xacro
                        gazebo:=true
                        hand:=$(arg load_gripper)
                        arm_id:=$(arg arm_id)
                        xyz:='-$(arg first_joint_length) 0 $(arg base_height)'
                        rpy:='0 -1.57079632679 3.14159265359'">
        </param>
    </group>

    <group if="$(eval mode == 'ceil')">
        <arg name="height" value="$(eval arg('first_joint_length')+arg('base_height'))" />
        <param name="robot_description"
                command="xacro $(find franka_description)/robots/panda/panda.urdf.xacro
                        gazebo:=true
                        hand:=$(arg load_gripper)
                        arm_id:=$(arg arm_id)
                        xyz:='0 0 $(arg height)'
                        rpy:='0 3.14159265359 3.14159265359'">
        </param>
    </group>



    <!-- Launch franka_control node -->
    <!-- <include file="$(find franka_control)/launch/franka_control.launch" if="$(arg load_gripper)">
        <arg name="robot_ip" value="$(arg robot_ip)" />
        <arg name="load_gripper" value="$(arg load_gripper)" />
    </include> -->

    <include file="$(find gazebo_ros)/launch/empty_world.launch" if="$(arg gazebo)">
        <arg name="world_name" value="$(arg world)"/>
        <arg name="paused" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="use_sim_time" value="true"/>
    </include> 

    <node name="$(arg arm_id)_model_spawner"
        pkg="gazebo_ros"
        type="spawn_model"
        args="-param robot_description -urdf -model $(arg arm_id) -unpause
            $(arg initial_joint_positions)"
    />

    <node pkg="controller_manager"
        type="spawner"
        name="$(arg arm_id)_gripper_spawner"
        if="$(arg load_gripper)"
        args="franka_gripper"
        respawn="false"
    />

    <node pkg="controller_manager"
        type="spawner"
        name="$(arg arm_id)_controller_spawner"
        respawn="false" output="screen"
        args="--wait-for initialized franka_state_controller $(arg controller)"
    />
    
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher">
        <param name="/use_gui" value="$(arg use_gui)"/>
        <param name="rate" value="30"/>
        <rosparam param="source_list">[franka_state_controller/joint_states, franka_gripper/joint_states] </rosparam>
    </node>

    <node pkg="humanlike_moving_robot" type="gravity_comp.py" name="gravity_compensation" />

    <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz" args="-d $(find franka_example_controllers)/launch/rviz/franka_description_with_marker.rviz" output="screen"/>
</launch>